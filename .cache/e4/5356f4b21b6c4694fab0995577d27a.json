{"id":"src/dino.js","dependencies":[{"name":"/home/alumne/Code/dino_game/package.json","includedInParent":true,"mtime":1652362670406},{"name":"./animations/index","loc":{"line":1,"column":31,"index":31},"parent":"/home/alumne/Code/dino_game/src/dino.js","resolved":"/home/alumne/Code/dino_game/src/animations/index.js"},{"name":"./objects/Player","loc":{"line":2,"column":19,"index":72},"parent":"/home/alumne/Code/dino_game/src/dino.js","resolved":"/home/alumne/Code/dino_game/src/objects/Player.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _index = _interopRequireDefault(require(\"./animations/index\"));\n\nvar _Player = _interopRequireDefault(require(\"./objects/Player\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Dino = /*#__PURE__*/function (_Phaser$Scene) {\n  _inherits(Dino, _Phaser$Scene);\n\n  var _super = _createSuper(Dino);\n\n  function Dino() {\n    _classCallCheck(this, Dino);\n\n    return _super.call(this, 'Dino');\n  }\n\n  _createClass(Dino, [{\n    key: \"preload\",\n    value: function preload() {\n      var _this = this;\n\n      this.load.spritesheet('tiles', './assets/tiles.png', {\n        frameWidth: 16,\n        frameHeight: 16\n      });\n      this.load.atlas('atlas', './assets/atlas.png', './assets/atlas.json');\n      this.load.on('complete', function () {\n        (0, _index.default)(_this);\n      });\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      this.player = new _Player.default(this, 25, 460);\n      this.inputs = this.input.keyboard.createCursorKeys();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.player.update(this.inputs);\n    }\n  }]);\n\n  return Dino;\n}(Phaser.Scene);\n\nvar _default = Dino;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/dino.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"src/dino.js","original":{"line":2,"column":0}},{"generated":{"line":36,"column":4},"source":"src/dino.js","original":{"line":4,"column":6},"name":"Dino"},{"generated":{"line":41,"column":2},"source":"src/dino.js","original":{"line":5,"column":4}},{"generated":{"line":41,"column":18},"source":"src/dino.js","original":{"line":5,"column":18}},{"generated":{"line":42,"column":4},"source":"src/dino.js","original":{"line":5,"column":18}},{"generated":{"line":44,"column":4},"source":"src/dino.js","original":{"line":5,"column":18}},{"generated":{"line":44,"column":29},"source":"src/dino.js","original":{"line":6,"column":14}},{"generated":{"line":44,"column":35},"source":"src/dino.js","original":{"line":5,"column":18}},{"generated":{"line":45,"column":2},"source":"src/dino.js","original":{"line":7,"column":5}},{"generated":{"line":49,"column":11},"source":"src/dino.js","original":{"line":9,"column":4}},{"generated":{"line":49,"column":30},"source":"src/dino.js","original":{"line":9,"column":13}},{"generated":{"line":50,"column":6},"source":"src/dino.js","original":{"line":9,"column":13}},{"generated":{"line":52,"column":6},"source":"src/dino.js","original":{"line":10,"column":8}},{"generated":{"line":52,"column":11},"source":"src/dino.js","original":{"line":10,"column":13},"name":"load"},{"generated":{"line":52,"column":15},"source":"src/dino.js","original":{"line":10,"column":8}},{"generated":{"line":52,"column":16},"source":"src/dino.js","original":{"line":10,"column":18},"name":"spritesheet"},{"generated":{"line":52,"column":27},"source":"src/dino.js","original":{"line":10,"column":8}},{"generated":{"line":52,"column":28},"source":"src/dino.js","original":{"line":10,"column":30}},{"generated":{"line":52,"column":35},"source":"src/dino.js","original":{"line":10,"column":8}},{"generated":{"line":52,"column":37},"source":"src/dino.js","original":{"line":10,"column":39}},{"generated":{"line":52,"column":57},"source":"src/dino.js","original":{"line":10,"column":8}},{"generated":{"line":52,"column":59},"source":"src/dino.js","original":{"line":10,"column":60}},{"generated":{"line":53,"column":8},"source":"src/dino.js","original":{"line":10,"column":61},"name":"frameWidth"},{"generated":{"line":53,"column":18},"source":"src/dino.js","original":{"line":10,"column":71}},{"generated":{"line":53,"column":20},"source":"src/dino.js","original":{"line":10,"column":73}},{"generated":{"line":53,"column":22},"source":"src/dino.js","original":{"line":10,"column":60}},{"generated":{"line":54,"column":8},"source":"src/dino.js","original":{"line":10,"column":76},"name":"frameHeight"},{"generated":{"line":54,"column":19},"source":"src/dino.js","original":{"line":10,"column":87}},{"generated":{"line":54,"column":21},"source":"src/dino.js","original":{"line":10,"column":89}},{"generated":{"line":55,"column":6},"source":"src/dino.js","original":{"line":10,"column":60}},{"generated":{"line":55,"column":7},"source":"src/dino.js","original":{"line":10,"column":8}},{"generated":{"line":56,"column":6},"source":"src/dino.js","original":{"line":11,"column":8}},{"generated":{"line":56,"column":11},"source":"src/dino.js","original":{"line":11,"column":13},"name":"load"},{"generated":{"line":56,"column":15},"source":"src/dino.js","original":{"line":11,"column":8}},{"generated":{"line":56,"column":16},"source":"src/dino.js","original":{"line":11,"column":18},"name":"atlas"},{"generated":{"line":56,"column":21},"source":"src/dino.js","original":{"line":11,"column":8}},{"generated":{"line":56,"column":22},"source":"src/dino.js","original":{"line":11,"column":24}},{"generated":{"line":56,"column":29},"source":"src/dino.js","original":{"line":11,"column":8}},{"generated":{"line":56,"column":31},"source":"src/dino.js","original":{"line":11,"column":32}},{"generated":{"line":56,"column":51},"source":"src/dino.js","original":{"line":11,"column":8}},{"generated":{"line":56,"column":53},"source":"src/dino.js","original":{"line":11,"column":54}},{"generated":{"line":56,"column":74},"source":"src/dino.js","original":{"line":11,"column":8}},{"generated":{"line":57,"column":6},"source":"src/dino.js","original":{"line":13,"column":8}},{"generated":{"line":57,"column":11},"source":"src/dino.js","original":{"line":13,"column":13},"name":"load"},{"generated":{"line":57,"column":15},"source":"src/dino.js","original":{"line":13,"column":8}},{"generated":{"line":57,"column":16},"source":"src/dino.js","original":{"line":13,"column":18},"name":"on"},{"generated":{"line":57,"column":18},"source":"src/dino.js","original":{"line":13,"column":8}},{"generated":{"line":57,"column":19},"source":"src/dino.js","original":{"line":13,"column":21}},{"generated":{"line":57,"column":29},"source":"src/dino.js","original":{"line":13,"column":8}},{"generated":{"line":57,"column":31},"source":"src/dino.js","original":{"line":13,"column":33}},{"generated":{"line":57,"column":43},"source":"src/dino.js","original":{"line":13,"column":37}},{"generated":{"line":58,"column":8},"source":"src/dino.js","original":{"line":14,"column":11}},{"generated":{"line":58,"column":28},"source":"src/dino.js","original":{"line":14,"column":30}},{"generated":{"line":58,"column":33},"source":"src/dino.js","original":{"line":14,"column":11}},{"generated":{"line":59,"column":6},"source":"src/dino.js","original":{"line":15,"column":9}},{"generated":{"line":59,"column":7},"source":"src/dino.js","original":{"line":13,"column":8}},{"generated":{"line":60,"column":4},"source":"src/dino.js","original":{"line":16,"column":5}},{"generated":{"line":63,"column":11},"source":"src/dino.js","original":{"line":18,"column":4}},{"generated":{"line":63,"column":29},"source":"src/dino.js","original":{"line":18,"column":12}},{"generated":{"line":64,"column":6},"source":"src/dino.js","original":{"line":19,"column":8}},{"generated":{"line":64,"column":11},"source":"src/dino.js","original":{"line":19,"column":13},"name":"player"},{"generated":{"line":64,"column":17},"source":"src/dino.js","original":{"line":19,"column":8}},{"generated":{"line":64,"column":20},"source":"src/dino.js","original":{"line":19,"column":22}},{"generated":{"line":64,"column":24},"source":"src/dino.js","original":{"line":19,"column":26},"name":"Player"},{"generated":{"line":64,"column":39},"source":"src/dino.js","original":{"line":19,"column":22}},{"generated":{"line":64,"column":40},"source":"src/dino.js","original":{"line":19,"column":33}},{"generated":{"line":64,"column":44},"source":"src/dino.js","original":{"line":19,"column":22}},{"generated":{"line":64,"column":46},"source":"src/dino.js","original":{"line":19,"column":39}},{"generated":{"line":64,"column":48},"source":"src/dino.js","original":{"line":19,"column":22}},{"generated":{"line":64,"column":50},"source":"src/dino.js","original":{"line":19,"column":43}},{"generated":{"line":64,"column":53},"source":"src/dino.js","original":{"line":19,"column":22}},{"generated":{"line":64,"column":54},"source":"src/dino.js","original":{"line":19,"column":8}},{"generated":{"line":65,"column":6},"source":"src/dino.js","original":{"line":20,"column":8}},{"generated":{"line":65,"column":11},"source":"src/dino.js","original":{"line":20,"column":13},"name":"inputs"},{"generated":{"line":65,"column":17},"source":"src/dino.js","original":{"line":20,"column":8}},{"generated":{"line":65,"column":20},"source":"src/dino.js","original":{"line":20,"column":22}},{"generated":{"line":65,"column":25},"source":"src/dino.js","original":{"line":20,"column":27},"name":"input"},{"generated":{"line":65,"column":30},"source":"src/dino.js","original":{"line":20,"column":22}},{"generated":{"line":65,"column":31},"source":"src/dino.js","original":{"line":20,"column":33},"name":"keyboard"},{"generated":{"line":65,"column":39},"source":"src/dino.js","original":{"line":20,"column":22}},{"generated":{"line":65,"column":40},"source":"src/dino.js","original":{"line":20,"column":42},"name":"createCursorKeys"},{"generated":{"line":65,"column":56},"source":"src/dino.js","original":{"line":20,"column":22}},{"generated":{"line":65,"column":58},"source":"src/dino.js","original":{"line":20,"column":8}},{"generated":{"line":66,"column":4},"source":"src/dino.js","original":{"line":21,"column":5}},{"generated":{"line":69,"column":11},"source":"src/dino.js","original":{"line":23,"column":4}},{"generated":{"line":69,"column":29},"source":"src/dino.js","original":{"line":23,"column":12}},{"generated":{"line":70,"column":6},"source":"src/dino.js","original":{"line":24,"column":8}},{"generated":{"line":70,"column":11},"source":"src/dino.js","original":{"line":24,"column":13},"name":"player"},{"generated":{"line":70,"column":17},"source":"src/dino.js","original":{"line":24,"column":8}},{"generated":{"line":70,"column":18},"source":"src/dino.js","original":{"line":24,"column":20},"name":"update"},{"generated":{"line":70,"column":24},"source":"src/dino.js","original":{"line":24,"column":8}},{"generated":{"line":70,"column":25},"source":"src/dino.js","original":{"line":24,"column":27}},{"generated":{"line":70,"column":30},"source":"src/dino.js","original":{"line":24,"column":32},"name":"inputs"},{"generated":{"line":70,"column":36},"source":"src/dino.js","original":{"line":24,"column":8}},{"generated":{"line":71,"column":4},"source":"src/dino.js","original":{"line":25,"column":5}},{"generated":{"line":75,"column":2},"source":"src/dino.js","original":{"line":4,"column":19},"name":"Phaser"},{"generated":{"line":75,"column":8},"source":"src/dino.js","original":{"line":4,"column":25}},{"generated":{"line":75,"column":9},"source":"src/dino.js","original":{"line":4,"column":26},"name":"Scene"},{"generated":{"line":77,"column":15},"source":"src/dino.js","original":{"line":27,"column":15},"name":"Dino"}],"sources":{"src/dino.js":"import generateAnimations from './animations/index';\nimport Player from './objects/Player'\n\nclass Dino extends Phaser.Scene{\n    constructor() {\n        super('Dino');\n    }\n\n    preload(){\n        this.load.spritesheet('tiles', './assets/tiles.png',{frameWidth: 16,frameHeight: 16});\n        this.load.atlas('atlas','./assets/atlas.png', './assets/atlas.json');\n\n        this.load.on('complete', ()=>{\n           generateAnimations(this);\n        });\n    }\n\n    create(){\n        this.player = new Player(this, 25, 460);\n        this.inputs = this.input.keyboard.createCursorKeys();\n    }\n\n    update(){\n        this.player.update(this.inputs);\n    }\n}\nexport default Dino;"},"lineCount":null}},"error":null,"hash":"de4dd2dd948f1fcbcfc3b7283954da53","cacheData":{"env":{}}}